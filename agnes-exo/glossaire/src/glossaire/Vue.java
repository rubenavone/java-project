package glossaire;

import java.awt.BorderLayout;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author agnes extends ruben
 */
/*
            Faire une petit soft permettant de crée
                                               lire
                                               mettre à jour
                                               supprimer 
            CRUD
            Un glossaire contenant diverses informations 
            un mot sa définitions etc etc 
            Premierement on place notre mot dans un premier text area 
            Deuxiemement on place notre definiton dans un second text
            et enfin lors du clique sur le bouton envoie on recupere les deux 
            saisis et on les envoie dans la base de donnée 
 */
public class Vue extends javax.swing.JFrame {

    Lexique lexique = new Lexique();
    DefaultTableModel modelTab;

    /**
     * Creates new form Vue
     */
    public Vue() {
        initComponents();
        modelTab = (DefaultTableModel) motAndType.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        selector = new javax.swing.JTabbedPane();
        javax.swing.JPanel create = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane2 = new javax.swing.JScrollPane();
        definitionArea = new javax.swing.JTextArea();
        javax.swing.JButton envoieButton = new javax.swing.JButton();
        javax.swing.JLabel motLabel = new javax.swing.JLabel();
        javax.swing.JLabel definitionLabel = new javax.swing.JLabel();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        fieldMot = new javax.swing.JTextField();
        fieldCategorie = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JPanel read = new javax.swing.JPanel();
        javax.swing.JScrollPane jScrollPane3 = new javax.swing.JScrollPane();
        afficheArea = new javax.swing.JTextArea();
        javax.swing.JLabel afficheLabel = new javax.swing.JLabel();
        javax.swing.JButton afficheBtn = new javax.swing.JButton();
        javax.swing.JScrollPane listeMot = new javax.swing.JScrollPane();
        motAndType = new javax.swing.JTable();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel5 = new javax.swing.JLabel();
        javax.swing.JPanel update = new javax.swing.JPanel();
        javax.swing.JPanel delete = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("glossaire");
        setResizable(false);

        selector.setBorder(new javax.swing.border.MatteBorder(null));
        selector.setToolTipText("");
        selector.setName(""); // NOI18N

        definitionArea.setColumns(20);
        definitionArea.setRows(5);
        jScrollPane2.setViewportView(definitionArea);

        envoieButton.setText("Envoie");
        envoieButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                envoieButtonActionPerformed(evt);
            }
        });

        motLabel.setText("Mot");

        definitionLabel.setText("Definition");

        jLabel2.setText("Catégorie");

        fieldCategorie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldCategorieActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel3.setText("Ajouter un nouveau mot:");

        javax.swing.GroupLayout createLayout = new javax.swing.GroupLayout(create);
        create.setLayout(createLayout);
        createLayout.setHorizontalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(createLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
                        .addGap(141, 141, 141))
                    .addGroup(createLayout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fieldCategorie)
                            .addComponent(fieldMot)
                            .addGroup(createLayout.createSequentialGroup()
                                .addGap(59, 59, 59)
                                .addComponent(jLabel2)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(289, 289, 289))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                        .addComponent(envoieButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(321, 321, 321))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                        .addComponent(definitionLabel)
                        .addGap(350, 350, 350))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                        .addComponent(motLabel)
                        .addGap(370, 370, 370))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(217, 217, 217))))
        );
        createLayout.setVerticalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(motLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(fieldMot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(fieldCategorie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(definitionLabel)
                .addGap(8, 8, 8)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(envoieButton)
                .addGap(50, 50, 50))
        );

        selector.addTab("Create", create);

        afficheArea.setColumns(20);
        afficheArea.setRows(5);
        jScrollPane3.setViewportView(afficheArea);

        afficheLabel.setText("Liste de mots");

        afficheBtn.setText("Affiche/Update");
        afficheBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                afficheBtnActionPerformed(evt);
            }
        });

        motAndType.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mot", "Langage"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        motAndType.setAutoscrolls(false);
        motAndType.setColumnSelectionAllowed(true);
        motAndType.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                motAndTypeMouseClicked(evt);
            }
        });
        listeMot.setViewportView(motAndType);
        motAndType.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (motAndType.getColumnModel().getColumnCount() > 0) {
            motAndType.getColumnModel().getColumn(0).setResizable(false);
            motAndType.getColumnModel().getColumn(1).setResizable(false);
        }

        jLabel1.setText("Définitions");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel5.setText("Affichage du glossaire");

        javax.swing.GroupLayout readLayout = new javax.swing.GroupLayout(read);
        read.setLayout(readLayout);
        readLayout.setHorizontalGroup(
            readLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readLayout.createSequentialGroup()
                .addGap(181, 181, 181)
                .addComponent(afficheLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 295, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(127, 127, 127))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readLayout.createSequentialGroup()
                .addGroup(readLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(readLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(afficheBtn))
                    .addComponent(listeMot, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(234, 234, 234))
        );
        readLayout.setVerticalGroup(
            readLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(afficheBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(readLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(afficheLabel)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(readLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(listeMot, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        selector.addTab("Read", read);

        javax.swing.GroupLayout updateLayout = new javax.swing.GroupLayout(update);
        update.setLayout(updateLayout);
        updateLayout.setHorizontalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 769, Short.MAX_VALUE)
        );
        updateLayout.setVerticalGroup(
            updateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        selector.addTab("Update", update);

        javax.swing.GroupLayout deleteLayout = new javax.swing.GroupLayout(delete);
        delete.setLayout(deleteLayout);
        deleteLayout.setHorizontalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 769, Short.MAX_VALUE)
        );
        deleteLayout.setVerticalGroup(
            deleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 505, Short.MAX_VALUE)
        );

        selector.addTab("Delete", delete);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selector)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(selector, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        selector.getAccessibleContext().setAccessibleName("Create");

        getAccessibleContext().setAccessibleName("Glossaire");
        getAccessibleContext().setAccessibleDescription("Definition de mot");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Lors du clique sur une colonne
     * envoie l'id de la dite colone et recupere la 
     * definition
     * @param evt 
     */
    private void motAndTypeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_motAndTypeMouseClicked
        // TODO add your handling code here:
        afficheArea.setLineWrap(true);

        int id = motAndType.getSelectedRow()+1;

        afficheArea.setText(ModeleLexique.afficheDefinition(id));
        System.out.println(ModeleLexique.afficheDefinition(id));
        System.out.println(id);
    }//GEN-LAST:event_motAndTypeMouseClicked

    private void fieldCategorieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldCategorieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldCategorieActionPerformed

//GEN-FIRST:event_envoieBtnActionPerformed
 
//GEN-LAST:event_envoieBtnActionPerformed

    private void afficheBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_afficheBtnActionPerformed
     ArrayList<Lexique> array = ModeleLexique.afficheEnsemble();
       System.out.println(array);
      
       for(Lexique l : array){
       modelTab.addRow(l.toArray());
       }
    }//GEN-LAST:event_afficheBtnActionPerformed

    private void envoieButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_envoieButtonActionPerformed
        String mot = fieldMot.getText();
        String type = fieldCategorie.getText();
        String definition = definitionArea.getText();
        
        ModeleCategorie.ajouterMot(mot, definition, type);
    }//GEN-LAST:event_envoieButtonActionPerformed

   
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Vue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Vue().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextArea afficheArea;
    javax.swing.JTextArea definitionArea;
    javax.swing.JTextField fieldCategorie;
    javax.swing.JTextField fieldMot;
    javax.swing.JTable motAndType;
    javax.swing.JTabbedPane selector;
    // End of variables declaration//GEN-END:variables
}
